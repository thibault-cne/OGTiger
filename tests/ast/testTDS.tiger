let
    type float = {val : int, pow : int}

    function powfunc(x : int, power : int) : int = 
        let 
            var retour: int := 1
        in 
            for i:= 0 to power do 
                (retour := retour * x);
            retour
        end

    function min(x1 : int, x2:int) : int =
        let 
            var retour: int := 0
        in 
            if x1>x2 then (retour := x2 )else (retour:= x1);
            retour
        end

    function fload_add(x1 : float, x2: float, r : float) = 
        let
            var retour := float {val = 0, pow =  min(x1.pow,x2.pow)}
        in
            if x1.pow > x2.pow then (retour.val := x2.val + x1.val * powfunc(10, x1.pow - x2.pow))
                                else (retour.val := x1.val + x2.val * powfunc(10, x2.pow - x1.pow));
            r.val := retour.val;
            r.pow := retour.pow
        end

    function float_mult(x1: float, x2 : float, r : float) =
        let
        var retour := float {val = 0, pow =  x1.pow + x2.pow}
        in
        retour.val := x1.val * x2.val;
        r.val := retour.val;
        r.pow := retour.pow
        end
     
    function float_print(f : float) = 

        (print(f.val); print("*"); print(10);print("^");print(f.pow);print("\n"))
    

    var f1 := float {val = 5, pow = -1}
    var f2 := float {val = 467, pow = -2}

in
    float_mult(f1,f2,f1);
    float_print(f1)
end
        
        


    

            
